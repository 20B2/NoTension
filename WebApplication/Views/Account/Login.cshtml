@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@using WebApplication.Infrastructure.ViewModels.AccountViewModels
@using WebApplication.Identity
@using Microsoft.AspNetCore.Identity
@model LoginViewModel
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Log in";
    var fb = "tn-fb";
    var twitter = "tn-twitter";
    var googleplus = "tn-gplus";
}

<div class="container">
    <div class="">
        <div asp-validation-summary="All" class="text-danger"></div>
    </div>
    <div class="tn-vp-center">
        <ul class="tn-panel">
            <li class="tn-panel-title">
                Login
            </li>
            <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">


                <div class="tn-m-b-5">
                    <li class="tn-form-group">
                        <label for="UserName" class="control-label sr-only">Username</label>
                        <input asp-for="UserName" class="form-control" placeholder="Email" />
                    </li>
                    <li class="tn-form-group">
                        <label for="password" class="control-label sr-only">Password</label>
                        <input asp-for="Password" class="form-control" placeholder="Password" />
                    </li>
                </div>
                <li>
                    <button type="submit" class="tn-btn form-control">Log in</button>
                </li>
            </form>






            <li class="tn-forget-pass">
                <a asp-action="ForgotPassword">Forgot password?</a>
            </li>
            <li class="tn-social-login">
                <div class="tn-social-login-title">
                    Sign in with
                </div>

                <br />
                <div class="tn-social-login-body">

                    @{
                        var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
                        if (loginProviders.Count == 0)
                        {
                            <div>
                                <p>
                                    We do not support login from external providers yet.
                                </p>
                            </div>
                        }
                        else
                        {
                            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">
                                <div>
                                    <p>
                                        @foreach (var provider in loginProviders)
                                        {
                                            <button type="submit" class="tn-btn tn-btn-md
                                                        @if (provider.AuthenticationScheme == "Facebook")
                                                        {
                                                        @fb

                                                        }
                                                        @if (provider.AuthenticationScheme == "Twitter")
                                                        {
                                                            @twitter

                                                        }
                                                        @if (provider.AuthenticationScheme == "Google")
                                                        {

                                                            @googleplus
                                                        }

                                                        " name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">
                                                @provider.AuthenticationScheme
                                            </button>
                                        }
                                    </p>
                                </div>
                            </form>
                        }
                    }
                </div>
            </li>
        </ul>



    </div>

</div>




@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}


